def render_graph_PathTracerGraph():
    g = RenderGraph("PathTracerGraph")
    loadRenderPassLibrary("AccumulatePass.dll")
    loadRenderPassLibrary("GBuffer.dll")
    loadRenderPassLibrary("ToneMapper.dll")
    loadRenderPassLibrary("MegakernelPathTracer.dll")
    loadRenderPassLibrary("PixelInspectorPass.dll")
    AccumulatePass = createPass("AccumulatePass", {'enabled': True})
    g.addPass(AccumulatePass, "AccumulatePass")
    ToneMappingPass = createPass("ToneMapper", {'autoExposure': False, 'exposureCompensation': 0.0})
    g.addPass(ToneMappingPass, "ToneMappingPass")
    GBufferRT = createPass("GBufferRT", {'forceCullMode': False, 'cull': CullMode.CullBack, 'samplePattern': SamplePattern.Stratified, 'sampleCount': 16})
    g.addPass(GBufferRT, "GBufferRT")
    MegakernelPathTracer = createPass("MegakernelPathTracer", {'params': PathTracerParams(useVBuffer=0)})
    g.addPass(MegakernelPathTracer, "MegakernelPathTracer")
    PixelInspectorPass = createPass("PixelInspectorPass", {})
    g.addPass(PixelInspectorPass, "PixelInspectorPass")
    g.addEdge("GBufferRT.vbuffer", "MegakernelPathTracer.vbuffer")      # Required by ray footprint.
    g.addEdge("GBufferRT.posW", "MegakernelPathTracer.posW")
    g.addEdge("GBufferRT.normW", "MegakernelPathTracer.normalW")
    g.addEdge("GBufferRT.tangentW", "MegakernelPathTracer.tangentW")
    g.addEdge("GBufferRT.faceNormalW", "MegakernelPathTracer.faceNormalW")
    g.addEdge("GBufferRT.viewW", "MegakernelPathTracer.viewW")
    g.addEdge("GBufferRT.diffuseOpacity", "MegakernelPathTracer.mtlDiffOpacity")
    g.addEdge("GBufferRT.specRough", "MegakernelPathTracer.mtlSpecRough")
    g.addEdge("GBufferRT.emissive", "MegakernelPathTracer.mtlEmissive")
    g.addEdge("GBufferRT.matlExtra", "MegakernelPathTracer.mtlParams")
    g.addEdge("MegakernelPathTracer.color", "AccumulatePass.input")
    g.addEdge("AccumulatePass.output", "ToneMappingPass.src")
    g.addEdge("GBufferRT.posW", "PixelInspectorPass.posW")
    g.addEdge("GBufferRT.normW", "PixelInspectorPass.normW")
    g.addEdge("GBufferRT.tangentW", "PixelInspectorPass.tangentW")
    g.addEdge("GBufferRT.emissive", "PixelInspectorPass.emissive")
    g.addEdge("GBufferRT.specRough", "PixelInspectorPass.specRough")
    g.addEdge("GBufferRT.matlExtra", "PixelInspectorPass.matlExtra")
    g.addEdge("GBufferRT.texC", "PixelInspectorPass.texC")
    g.addEdge("GBufferRT.faceNormalW", "PixelInspectorPass.faceNormalW")
    g.addEdge("GBufferRT.vbuffer", "PixelInspectorPass.vbuffer")
    g.addEdge("AccumulatePass.output", "PixelInspectorPass.linColor")
    g.addEdge("ToneMappingPass.dst", "PixelInspectorPass.outColor")
    g.addEdge("GBufferRT.diffuseOpacity", "PixelInspectorPass.diffuseOpacity")
    g.markOutput("ToneMappingPass.dst")
    g.markOutput("PixelInspectorPass.fakeOutput")
    return g

PathTracerGraph = render_graph_PathTracerGraph()
try: m.addGraph(PathTracerGraph)
except NameError: None
